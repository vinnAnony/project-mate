version: "3.11"
x-environment: &commonEnvironment
  - APP_PORT=${APP_PORT}
  - DEBUG=${DEBUG}
  - ALLOWED_HOSTS=${ALLOWED_HOSTS}
  - DB_NAME=${DB_NAME}
  - DB_USER=${DB_USER}
  - DB_PASSWORD=${DB_PASSWORD}
  - DB_HOST=${DB_HOST}
  - DB_PORT=${DB_PORT}
  - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
  - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
  - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
  - CELERY_BROKER=${CELERY_BROKER}
  - SECRET_KEY=${SECRET_KEY}

services:
  application:
    build: .    
    environment: *commonEnvironment
    env_file:
      - .env
    ports:
      - "8000:${APP_PORT}"
    command: sh -c "echo '<<< WKHTMLTOPDF installation path >>>' &&
                echo 'Insert this path in WKHTMLTOPDF_LOCATION environment variable.' &&
                which wkhtmltopdf &&
                echo '>>> WKHTMLTOPDF installation path <<<' &&
                gunicorn projectmate.wsgi:application --bind 0.0.0.0:${APP_PORT}"
    volumes:
      - .:/app    
    depends_on:
      - database
      - redis
      - celery-worker

  celery-worker:
    build: .   
    command: sh -c "celery -A projectmate worker -l info"
    volumes:
      - .:/app
    depends_on:
      - database
      - redis 
  
  celery-beat:
    build: .   
    command: sh -c "celery -A projectmate beat -l info"
    volumes:
      - .:/app
    depends_on:
      - database
      - redis
      - celery-worker

  redis:
    image: redis:7-alpine
    restart: always

  database:
    image: postgres:alpine
    restart: always
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD", "pg_isready",'-U${DB_USER}', '-d${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data

volumes:
  pgdata:
    driver: local
